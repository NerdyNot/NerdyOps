version: '3.8'

services:
  web:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: nerdyops-backend:latest
    container_name: NerdyOps-Backend
    restart: always
    ports:
      - "5001:5001"
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=NerdyOps-MySQL
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_URL=redis://NerdyOps-Redis:6379
    depends_on:
      - mysql
      - redis

  frontend:
    build:
      context: ../frontend
      dockerfile: Dockerfile
      args:
        NEXT_PUBLIC_CENTRAL_SERVER_URL: http://localhost:5001
    image: nerdyops-frontend:latest
    container_name: NerdyOps-Frontend
    restart: always
    ports:
      - "8088:3000"
    depends_on:
      - web

  mysql:
    image: mysql:8.0
    container_name: NerdyOps-MySQL
    restart: always
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
    volumes:
      - mysql-data:/var/lib/mysql

  redis:
    image: redis:latest
    container_name: NerdyOps-Redis
    restart: always

  scheduler:
    build:
      context: ../backend
      dockerfile: Dockerfile
    image: nerdyops-scheduler:latest
    container_name: NerdyOps-Scheduler
    restart: always
    command: ["python", "scheduler.py"]
    environment:
      - DB_TYPE=${DB_TYPE}
      - DB_HOST=NerdyOps-MySQL
      - DB_PORT=3306
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - REDIS_URL=redis://NerdyOps-Redis:6379
    depends_on:
      - mysql
      - redis

volumes:
  mysql-data:
